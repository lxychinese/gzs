
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<title>垄上工作室-网站建设高端品牌-广州网站建设-企业网站建设</title>
<meta name="keywords" content="网站建设，网页设计，广州网站建设，深圳网站建设，企业网站建设，垄上工作室，手机网站，微信营销、APP开发、扎根垄上" />
<meta name="description" content="垄上工作室专注网站建设及信息化咨询服务，提供完善的网站建设、移动端应用、企业微信大战略、3D虚拟仿真等一系列企业互联网解决方案，知名客户有欧派、索菲亚、王老吉、PICC、海天味业、珠江钢琴、例外服饰、广百集团、轻工集团、广州发展集团。" />


<link rel="stylesheet" href="/templates/default/style/style.css" />

<link rel="stylesheet" href="/templates/default/style/media.css" />



<script type="text/javascript" src="/templates\default\script\jquery1.72.js"></script>

<script type="text/javascript" src="/templates\default\script\respond.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.SuperSlide2.11.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.lavalamp.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.imagesloaded.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.wookmark.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.easing.1.3.min.js"></script>

<script type="text/javascript" src="/templates\default\script\script.js"></script>

</head>

<body>

	<div id="web">

		<div class="newsBanner">
			<ul class="newsMenu fixed">
				<li rel="18"><a href="#">公司新闻</a></li>
				<li rel="19"><a href="#">项目动态</a></li>
				<li rel="20"><a href="#">杂记</a></li>

			</ul>
		</div>
		<script>
    (function ($) {
        var tid=20;
         $(".newsMenu li").each(function(ii){  
             if($(".newsMenu li").eq(ii).attr("rel")==tid)
             {
                   $(".newsMenu li").removeClass("on");
                   $(".newsMenu li").eq(ii).addClass("on");
             }
         }); 
    })(jQuery);
</script>



		<div class="newsCon">

			<div class="newsInfoCon wp">

				<div class="newsInfoBox">

					<div class="closeBtn">
						<a href="javascript:window.close()">关闭</a>
					</div>

					<h1>	Code First vs WSDL Frist</h1>

					<div class="time">
						发布日期：2015-07-25&nbsp;&nbsp;&nbsp;浏览次数：
						&nbsp;&nbsp;&nbsp;来源：<a href="index.htm" title="查看来源">垄上工作室</a>
					</div>

					<div class="article">

						<p><span style="font-size: 14px;"><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">如果要构建一个Web Services，CXF提供了两种构建方式一个是Code First，另一个WSDL First。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">那什么是Code First，什么又是WSDL First呢？&nbsp;</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">大家知道，如果我们要将一个服务发布一个WebService，我们需要定义这个服务所支持的方法，以及调用这些方法所提供的参数并将其转化成为WSDL，供其它的客户端调用。Code First是第一代的WebService开发工具所提供的构建WebService的一种方式。以Java为例，我们可以通过Interface定义一组Web服务所提供的方法，Code First就是通过获取这个Interface的信息构建出Web Services 所需要的信息，并在这些信息的基础上生成WSDL。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">而WSDL First就是通过WSDL文件，生成相关的Aritifacts，例如有相关的接口以及实现的代码框架等，这CORBA开发一样，先使用IDL描述我们的CORBA服务，通过IDL2XXX生成相关的接口和实现框架（屏蔽了网络传输中Marshal和Unmarshal的操作）。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">这两种构建Web Services各有特点，适合在不同的场景。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">接触过WSDL的朋友应该都有这样的感觉，WSDL虽然是用XML来进行描述的，但是如果让你在不借助任何工具的情况下写一个正确的WSDL，或者是改正一个错误的WSDL是很难的。Code First可以说是为我们提供了一个不错的选择。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">但是Web Services的Best Practies并不推荐Code First这一Web Services的构建方式。原因是什么呢？</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">这是因为我们在使用Code First构建方式时很少考虑到Web Services之间的交互是以文档方式进行（这样可以大大提高Web Services的互交互性），如果是使用Code First来构建WSDL信息，在描述描述交互信息的XML Schema都是以我们的Code中定义的类型信息来生成的，这样就可能会暴露一些比较细粒度的信息。同时大家知道不同的语言（C＋＋，Java， C＃，PHP）对XML Schema映射是各不相同的，如果我们Code中定义的类型很特殊，就可能产生出一个不能互操作的现象。</span><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><br style="color: rgb(51, 51, 51); font-family: Arial; font-size: 14px; line-height: 26px; white-space: normal; background-color: rgb(255, 255, 255);"/><span style="color: rgb(51, 51, 51); font-family: Arial; line-height: 26px; background-color: rgb(255, 255, 255);">所以Best Practies建议你在创建Web Services从交互的消息Schema入手，构建一个中间层来提供一个比较粗粒度的描述，这样可以比较好的解决Web Services的互交互问题。&nbsp;</span></span></p>

					</div>

				</div>

				<div class="otherPage fixed">

					

					<ol class="otherTool fixed">

						<li id="bdshare" class="share bdshare_b bdsharebuttonbox"><a
							class="bds_more" title="分享" data-cmd="more" href="javascript:;">分享</a></li>

						<li class="close"><a href="javascript:window.close()">关闭</a></li>

					</ol>

				</div>

			</div>

			<div class="reNewsCon wp">

				<div class="reNewsTit">相关推荐</div>

				<div class="reNewsBox">

					<ul class="newsList fixed">
					
					

						<li class="fixed">

							<div class="info">

								<a href="p-49.htm" target="_blank"
									title="">一个最简单的Lucene例子</span></a>

								<p>Lucene之简单运用</p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-58.htm" target="_blank"
									title="">天猫双11前端分享系列（一）</span></a>

								<p>提高页面响应速度</p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-64.htm" target="_blank"
									title="">微信JS SDK Demo</span></a>

								<p>微信JS-SDK 分享到朋友圈 分享给朋友 分享到QQ 拍照或从手机相册中选图</p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-65.htm" target="_blank"
									title="">编程认知：多思考、多编码、多测试</span></a>

								<p>每位程序员有自己独有的编程方式，悟出对编码流程的一些见解：多思考、多编码、多测试</p>

							</div>

						</li>

						



					</ul>

				</div>

				<a href="news" class="readMore">查看更多>></a>

			</div>

		</div>



		<script>

	window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];

	</script>





	</div>





	<ul class="indexFloatCon">

		<li><a href="javascript:;" class="indexGoTop" title="返回顶部"></a></li>

		<li><a target="_blank"
			href="http://wpa.qq.com/msgrd?v=3&uin=41794983&site=qq&menu=yes"
			title="点击咨询" class="online">在线服务</a></li>

		<li class="wenti"><a href="news"></a>

			<dl class="wentiCon fixed">

				<dt>
					<a href="#">更多></a><span>常见问题</span>
				</dt>


Expression index is undefined on line 181, column 9 in pro.ftl.
The problematic instruction:
----------
==> list index as news [on line 181, column 2 in pro.ftl]
----------

Java backtrace for programmers:
----------
freemarker.core.InvalidReferenceException: Expression index is undefined on line 181, column 9 in pro.ftl.
	at freemarker.core.TemplateObject.assertNonNull(TemplateObject.java:124)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:93)
	at freemarker.core.Environment.visit(Environment.java:196)
	at freemarker.core.MixedContent.accept(MixedContent.java:92)
	at freemarker.core.Environment.visit(Environment.java:196)
	at freemarker.core.Environment.process(Environment.java:176)
	at freemarker.template.Template.process(Template.java:232)
	at com.utils.FreemarkerUtils.geneHtmlFile(FreemarkerUtils.java:50)
	at com.liu.data.access.impl.ProductAccessImpl.list(ProductAccessImpl.java:54)
	at com.listen.SysListener.setupContextVer2(SysListener.java:34)
	at com.listen.SysListener.contextInitialized(SysListener.java:19)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:764)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:406)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:756)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:242)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1221)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:699)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:454)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:256)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:224)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:167)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:224)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:90)
	at org.eclipse.jetty.server.Server.doStart(Server.java:262)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:511)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:364)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:516)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
