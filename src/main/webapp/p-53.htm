
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">

<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<title>垄上工作室-网站建设高端品牌-广州网站建设-企业网站建设</title>
<meta name="keywords" content="网站建设，网页设计，广州网站建设，深圳网站建设，企业网站建设，垄上工作室，手机网站，微信营销、APP开发、扎根垄上" />
<meta name="description" content="垄上工作室专注网站建设及信息化咨询服务，提供完善的网站建设、移动端应用、企业微信大战略、3D虚拟仿真等一系列企业互联网解决方案，知名客户有欧派、索菲亚、王老吉、PICC、海天味业、珠江钢琴、例外服饰、广百集团、轻工集团、广州发展集团。" />


<link rel="stylesheet" href="/templates/default/style/style.css" />

<link rel="stylesheet" href="/templates/default/style/media.css" />



<script type="text/javascript" src="/templates\default\script\jquery1.72.js"></script>

<script type="text/javascript" src="/templates\default\script\respond.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.SuperSlide2.11.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.lavalamp.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.imagesloaded.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.wookmark.min.js"></script>

<script type="text/javascript" src="/templates\default\script\jquery.easing.1.3.min.js"></script>

<script type="text/javascript" src="/templates\default\script\script.js"></script>

</head>

<body>

	<div id="web">

		<div class="newsBanner">
			<ul class="newsMenu fixed">
				<li rel="18"><a href="#">公司新闻</a></li>
				<li rel="19"><a href="#">项目动态</a></li>
				<li rel="20"><a href="#">杂记</a></li>

			</ul>
		</div>
		<script>
    (function ($) {
        var tid=20;
         $(".newsMenu li").each(function(ii){  
             if($(".newsMenu li").eq(ii).attr("rel")==tid)
             {
                   $(".newsMenu li").removeClass("on");
                   $(".newsMenu li").eq(ii).addClass("on");
             }
         }); 
    })(jQuery);
</script>



		<div class="newsCon">

			<div class="newsInfoCon wp">

				<div class="newsInfoBox">

					<div class="closeBtn">
						<a href="javascript:window.close()">关闭</a>
					</div>

					<h1>	互联网时代的无栈开发</h1>

					<div class="time">
						发布日期：2015-12-03 19:48&nbsp;&nbsp;&nbsp;浏览次数：
						&nbsp;&nbsp;&nbsp;来源：<a href="index.htm" title="查看来源">垄上工作室</a>
					</div>

					<div class="article">

						<p><iframe allowtransparency="true" frameborder="0" scrolling="no" src="http://hits.sinajs.cn/A1/weiboshare.html?url=http%3A%2F%2Fwww.csdn.net%2Farticle%2F2015-12-03%2F2826382-SDCC&type=3&count=&appkey=&title=%E6%9C%AC%E6%96%87%E6%98%AF%E6%98%93%E5%BC%80%E5%8F%91%E5%88%9B%E5%A7%8B%E4%BA%BA%E6%BD%98%E4%BF%8A%E5%8B%87%E6%A0%B9%E6%8D%AE%E6%BC%94%E8%AE%B2%E5%86%85%E5%AE%B9%E5%92%8C%E5%90%8E%E7%BB%AD%E8%AE%A8%E8%AE%BA%E7%9A%84%E6%80%BB%E7%BB%93%EF%BC%8C%E4%BB%96%E5%88%86%E6%9E%90%E4%BA%86%E8%BD%AF%E4%BB%B6%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%8B%A5%E5%B9%B2%E4%B8%8D%E5%90%88%E7%90%86%E7%8E%B0%E7%8A%B6%EF%BC%8C%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E6%97%A0%E6%A0%88%E5%8C%96%E8%B6%8B%E5%8A%BF%E3%80%82%20%E4%BD%9C%E4%B8%BA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%88%91%E4%BB%AC%EF%BC%8C%E8%AF%A5%E5%A6%82%E4%BD%95%E8%A7%84%E5%88%92%E8%87%AA%E5%B7%B1%E7%9A%84%E8%81%8C%E4%B8%9A%E5%8F%91%E5%B1%95%E8%B7%AF%E7%BA%BF%EF%BC%8C%E9%A1%BA%E5%BA%94%E6%9C%AA%E6%9D%A5%E5%8F%91%E5%B1%95%E7%9A%84%E6%BD%AE%E6%B5%81%E3%80%82&pic=&ralateUid=&language=zh_cn&rnd=1449142918145" width="22" height="16"></iframe><strong>摘要：</strong>本文是易开发创始人潘俊勇根据演讲内容和后续讨论的总结，他分析了软件应用开发若干不合理现状，以及未来无栈化趋势。 作为程序员的我们，该如何规划自己的职业发展路线，顺应未来发展的潮流。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">感谢CSDN的邀请，我能在2015年度SDCC大会的编程语言专场作为演讲嘉宾，做《易开发的无栈开发之路》的主题演讲。&nbsp;演讲之后我和很多业界朋友进行了交流讨论，又有诸多启发。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">本文属于对演讲内容和后续讨论的一个总结，&nbsp;分析了软件应用开发若干不合理现状，以及未来无栈化趋势。&nbsp;作为程序员的我们，该如何规划自己的职业发展路线，顺应未来发展的潮流。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>1.&nbsp;软件开发的战国时代</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">软件开发面临着全新的移动互联网时代。&nbsp;用户需要更好的用户体验，更大的负载支持，以及海量数据的处理能力。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">为了满足这些新的技术要求，大量新的技术层出不穷，程序员应接不暇。从语言，到Web框架，都是如此。Python2还是Python3是个问题；Rails的2个版本完全是2个世界；JavaScript也是不断升级；前端框架那更是一个乱；后端数据库没消停；&nbsp;Java的世界已经扭转那么多次；新的语言也在挑战旧语言；一旦基础技术非主流，产品也就非主流，不能维护的产品就没有生命力了。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">当前技术领域创新过快，其实表示的是基础工业还不成熟。&nbsp;这种不成熟，对应用的危害是非常大的。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">一个应用的生命周期非常短，&nbsp;程序员的代码活不了几年就灰飞烟灭了。&nbsp;因为过了几年，之前的技术就全部变了，之前的代码也没法维护了。&nbsp;老人逐步退出战场，但新人都在用新技术。所以每次升级，代码都基本重写。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">特别地，当前前端技术相当不成熟，技术变得非常复杂，学习成本非常高。&nbsp;这导致前后端分栈开发成为普遍现象。一旦分栈，沟通成本高，&nbsp;开发效率变低，成熟的开发人员变成稀缺，最终对创业者非常不利。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>2. 理想：无栈开发</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">为了简化开发，越来越多的开发者服务出现，特别是BaaS（移动端后台云服务）以及&nbsp;aPaaS（应用开发平台&nbsp;Application&nbsp;Platform&nbsp;as&nbsp;a&nbsp;Service）。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">这些服务，都是基于平台提供的API，屏蔽底层技术，让用户进行快速应用开发。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">一个典型的例子就是，最近BaaS服务商Parse&nbsp;从&nbsp;Ruby&nbsp;迁移到&nbsp;Go后，&nbsp;所有Parse上的成千上万应用得知平滑迁移，完全不必知晓内部细节。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">另外，salesforce的force.com平台，&nbsp;也是提供了从后端建模到移动端的全套方案，使得企业应用的开发最简。我将这种开发模式称为无栈开发，属于未来的基于平台的应用开发者。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">无栈开发，对应于全栈开发。&nbsp;二者的结果都是一样的，都是一个人单兵完成应用开发任务。&nbsp;全栈开发者凭借自己的超人技能取胜，少之又少；&nbsp;而无栈开发者是凭借手中的强大武器完成任务，那就是开发平台。无栈开发者是面向最终用户的应用开发者，关注需要解决的问题，对技术不关注。&nbsp;希望技术最简单，不要经常改变。&nbsp;他们通常做些脚本级别的开发，不需要懂类、集成这些东西。&nbsp;甚至不需要懂html/css/js这类的东西。也不需要懂数据库内部的细节。&nbsp;应用开发者会更关注产品，利用平台工具做出最好的产品。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">另外一种开发者是平台开发者，他们为无栈开发者服务，&nbsp;关注技术问题，关注每一个技术变化，关注技术变化趋势，&nbsp;为应用开发者提供稳定一致的接口。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">我认为，未来大部分的应用开发者，会利用平台进行无栈开发。&nbsp;当然条件是，有各个领域的开发平台足够成熟。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>3.&nbsp;易开发的无栈化方案</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">易开发(easydo.cn)是一个企业应用领域的应用快速构建平台，&nbsp;我们希望开发者掌握最少的技能，就可以进行可持续的企业应用软件的开发，屏蔽底层技术的变迁。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">易开发做到了，使用一种Python语言，进行Web、桌面、微信的全端开发。&nbsp;这样即便刚毕业的三脚猫功夫的半路出家开发者，可能也可以基于平台进行开发。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>3.1&nbsp;Web前端</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">Web前端的去栈思想，是如何能借鉴桌面应用开发的经验，让后端开发者能开发前端。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">最终的方案是，使用Python来生成一切！</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><span style="background-color: initial;">使用Python生成html界面组件&nbsp;（ui接口）</span></p></li><li><p><span style="background-color: initial;">借鉴bootstrap的接口，提供组件化的接口，来生成html，屏蔽html实现细节。&nbsp;这也是顺应html组件化规范。</span></p></li></ul><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">典型写法如下：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">ui.panel()\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.add(ui.button(‘Click&nbsp;me’)\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.add(ui.text(‘Hello,&nbsp;world’))\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;+&nbsp;ui.button(‘新增’)\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.icon(‘add’)\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.loading(‘正在提交….’)\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.on(‘click’,&nbsp;‘@zopen.test:test’)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">显然这样的表达，比直接的bootstrap要更直观，并且即便bootstrap升级，也能平滑适配过去。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><span style="background-color: initial;">使用Python生成界面行为指令&nbsp;（view接口）</span></p></li></ul><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">借鉴jquery的组件定位方法，直接操作组件，屏蔽底层的js实现。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">典型写法如下：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">#&nbsp;显示出错提示</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.message(‘出错了’,&nbsp;type=&#39;error&#39;,&nbsp;)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">#&nbsp;在最近的tab页面组件显示&nbsp;hellow&nbsp;world</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.closest(&#39;tabs&#39;)\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;.active_panel()\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">.set_content(ui.h1(‘hello,&nbsp;world’))</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">实现上述ui组件和view指令之后，可以不用学习js/css/html开发复杂的界面。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">当然我们在浏览器上前端提供了一个web组件引擎，可以渲染ui组件和执行view指令。&nbsp;本质上，这个web组件引擎，将渲染html的网页浏览器，适配成了一个执行企业应用逻辑的应用浏览器。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>3.2&nbsp;微信号开发</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">微信企业号、公众号，其实也是web开发。区别在于，需要集成单点登录，可以使用特殊的js&nbsp;sdk。易开发为了支持微信，在微信浏览器上运行一个微信组件引擎，提供：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><span style="background-color: initial;">&nbsp;Web组件引擎的所有功能</span></p></li><li><p><span style="background-color: initial;">微信的单点登录</span></p></li><li><p><span style="background-color: initial;">初始化微信&nbsp;jssdk</span></p></li><li><p><span style="background-color: initial;">渲染微信特有组件：如图片上传、位置信息、扫一扫：</span></p></li></ul><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">ui.wechat.image_upload(...)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">ui.wechat.location(...)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">ui.wechat.scanner(...)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><span style="background-color: initial;">执行微信特有的view指令，如界面菜单设置等：</span></p></li></ul><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.wechat.hide_option_menu()</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.wechat.close_window()</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.wechat.open_enterprise_chat(…)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">这样，由于平台层的支持，开发微信应用几乎不需要虚席额外的知识，&nbsp;直接使用Python在后端就可以完成。另外，平台还自带了一个菜单编辑器，直接将开发完成的界面，部署到微信菜单。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>3.3&nbsp;桌面端</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">尽管浏览器功能不断加强，但是仍然是存在沙箱限制，而且大量用户使用旧的浏览器。&nbsp;如果让浏览器用户也能进行文件同步、断点续传、消息通知、在线编辑这些桌面软件才能实现的功能？</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">我们借鉴了豆瓣的开源项目&nbsp;OneRing，开发了桌面助手模块。&nbsp;桌面助手是一个运行在桌面的Web服务器，用来增强浏览器的功能。&nbsp;对于浏览器无法实现的桌面原生功能，会委托桌面助手来完成。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">桌面助手对桌面浏览器的增强，其实和微信对webkit浏览器的增强，道理是类似的。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">我们也扩展了一组ui组件，比如选择文件：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">ui.assistant.select_folder()</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">以及view指令：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.assistant.view(file)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.assistant.edit(file)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.assistant.upload(folder)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.assistant.download(file)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">View.assistant.sync(folder)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">这样，使用桌面编辑器，编辑一个线上文件，只需2行代码：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.assistant.edit(context)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">view.message(‘已经启动桌面助手进行编辑’)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">桌面助手的实现，使用了QT/Flask/Gevent/pyInstaller等技术。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>3.4&nbsp;数据库</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">传统关系数据库的门槛在于，需要了解关系数据库理论，&nbsp;需要管理数据的缓存，需要学习SQL语言。我们在对象数据库的基础上，封装了一个文档数据库：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><ul style="list-style-type: none;" class=" list-paddingleft-2"><li><p><span style="background-color: initial;">可以层次树状存放数据</span></p></li><li><p><span style="background-color: initial;">自由定义属性，这也是NoSQL数据库的特性</span></p></li><li><p><span style="background-color: initial;">访问的对象自动缓存</span></p></li><li><p><span style="background-color: initial;">内置授权权限机制</span></p></li><li><p><span style="background-color: initial;">表单可视化设计字段</span></p></li></ul><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><br/></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">这样最终用户几乎感觉不到数据库存在，直接使用Python对象即可。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">数据如何高效索引也是一大难题。平台底层使用elasticsearch，&nbsp;对所有属性都进行索引，提供查询API：</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">result&nbsp;=&nbsp;QuerySet().\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;anyof(path=[container]).\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;anyof(subjects=[‘aa’,’bb’]).\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;range(created=[None,&nbsp;datetime.datetime.today()]).\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;parse(&#39;我爱北京&#39;,&nbsp;fields=[&#39;title&#39;]).\</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">&nbsp;sort(‘-created’).limit(5)</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">最终用户使用这个接口，屏蔽了底层使用API，也不需要学习SQL，使用更简单。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>4&nbsp;.&nbsp;无栈开发的好处</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">有了基于平台的无栈开发，&nbsp;首先可以改变开发者不够用的情况，刚毕业的也可以招进来，&nbsp;大专、职业学校也可以用，更多跨界开发者带来更多创新。无栈开发可以带来更高的开发效率，更可维护的代码。&nbsp;最终让创业成本更低、风险更少。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">易开发自身的平台也正在经历无栈化重构，之前庞大的代码，减少一半以上；&nbsp;一种语言进行前后端开发，使得一个小的开发团队就可以进行维护。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><strong>5&nbsp;.&nbsp;无栈开发的未来</strong></p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;">无栈开发本身，其实是云计算发展的续集，是云计算走进领域的结果。未来，大部分开发者，都将从事无栈开发。&nbsp;开发会回归到简单，编程越来越人性化，最终人人编程不会是梦想。作为我们开发者，应该无栈开发潮流，更多关注产品，更多关注如何解决用户的问题，&nbsp;迎接将来的无栈应用开发时代。</p><p style="margin-top: 0px; margin-bottom: 1.5em; padding: 0px; list-style: none;"><img src="/ueditor/jsp/upload/image/20151203/1449143262093035046.jpg" align="left" style="vertical-align: middle; border: none; width: 216px; height: 144px;"/></p><h4 style="margin: 0.75em 0px; padding: 0px; list-style: none; font-size: 1em;">作者简介：<span style="margin: 0px 8px; background-color: initial;">潘俊勇，</span><span style="margin: 0px 8px; font-weight: normal; background-color: initial;">易开发创始人&amp;CTO，珠三角技术沙龙组委成员，曾就职中兴通讯。10多年Python开发经验的老coder，是Python语言在国内推广的早期布道者，曾经的Zope/Plone中国用户社区组织者。专注于企业级领域产品的开发，对企业级产品的需求、架构设计有丰富的经验。易开发是多年企业应用领域钻研的结晶，是一个人性化的企业应用的快速构建平台。</span></h4><p><br/></p>

					</div>

				</div>

				<div class="otherPage fixed">

					

					<ol class="otherTool fixed">

						<li id="bdshare" class="share bdshare_b bdsharebuttonbox"><a
							class="bds_more" title="分享" data-cmd="more" href="javascript:;">分享</a></li>

						<li class="close"><a href="javascript:window.close()">关闭</a></li>

					</ol>

				</div>

			</div>

			<div class="reNewsCon wp">

				<div class="reNewsTit">相关推荐</div>

				<div class="reNewsBox">

					<ul class="newsList fixed">
					
					

						<li class="fixed">

							<div class="info">

								<a href="p-8.htm" target="_blank"
									title="">格雅官网全新改版上线啦</span></a>

								<p></p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-37.htm" target="_blank"
									title="">Finder 及其子类的分析</span></a>

								<p>Finder 之源码解读</p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-54.htm" target="_blank"
									title="">正则表达式小用法</span></a>

								<p>文本处理利器之正则</p>

							</div>

						</li>

						<li class="fixed">

							<div class="info">

								<a href="p-58.htm" target="_blank"
									title="">天猫双11前端分享系列（一）</span></a>

								<p>提高页面响应速度</p>

							</div>

						</li>

						



					</ul>

				</div>

				<a href="news" class="readMore">查看更多>></a>

			</div>

		</div>



		<script>

	window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"0","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];

	</script>





	</div>





	<ul class="indexFloatCon">

		<li><a href="javascript:;" class="indexGoTop" title="返回顶部"></a></li>

		<li><a target="_blank"
			href="http://wpa.qq.com/msgrd?v=3&uin=41794983&site=qq&menu=yes"
			title="点击咨询" class="online">在线服务</a></li>

		<li class="wenti"><a href="news"></a>

			<dl class="wentiCon fixed">

				<dt>
					<a href="#">更多></a><span>常见问题</span>
				</dt>


Expression index is undefined on line 181, column 9 in pro.ftl.
The problematic instruction:
----------
==> list index as news [on line 181, column 2 in pro.ftl]
----------

Java backtrace for programmers:
----------
freemarker.core.InvalidReferenceException: Expression index is undefined on line 181, column 9 in pro.ftl.
	at freemarker.core.TemplateObject.assertNonNull(TemplateObject.java:124)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:93)
	at freemarker.core.Environment.visit(Environment.java:196)
	at freemarker.core.MixedContent.accept(MixedContent.java:92)
	at freemarker.core.Environment.visit(Environment.java:196)
	at freemarker.core.Environment.process(Environment.java:176)
	at freemarker.template.Template.process(Template.java:232)
	at com.utils.FreemarkerUtils.geneHtmlFile(FreemarkerUtils.java:50)
	at com.liu.data.access.impl.ProductAccessImpl.list(ProductAccessImpl.java:54)
	at com.listen.SysListener.setupContextVer2(SysListener.java:34)
	at com.listen.SysListener.contextInitialized(SysListener.java:19)
	at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:764)
	at org.eclipse.jetty.servlet.ServletContextHandler.callContextInitialized(ServletContextHandler.java:406)
	at org.eclipse.jetty.server.handler.ContextHandler.startContext(ContextHandler.java:756)
	at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:242)
	at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1221)
	at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:699)
	at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:454)
	at org.mortbay.jetty.plugin.JettyWebAppContext.doStart(JettyWebAppContext.java:256)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:224)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.doStart(ContextHandlerCollection.java:167)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:224)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:90)
	at org.eclipse.jetty.server.Server.doStart(Server.java:262)
	at org.mortbay.jetty.plugin.JettyServer.doStart(JettyServer.java:65)
	at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:59)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.startJetty(AbstractJettyMojo.java:511)
	at org.mortbay.jetty.plugin.AbstractJettyMojo.execute(AbstractJettyMojo.java:364)
	at org.mortbay.jetty.plugin.JettyRunMojo.execute(JettyRunMojo.java:516)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
