<!DOCTYPE html>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<title>垄上工作室-网站建设高端品牌-广州网站建设-企业网站建设</title>

<meta name="keywords" content="网站建设，网页设计，广州网站建设，深圳网站建设，企业网站建设，垄上工作室，手机网站，微信营销、APP开发、扎根垄上" />
<meta name="description" content="垄上工作室专注网站建设及信息化咨询服务，提供完善的网站建设、移动端应用、企业微信大战略、3D虚拟仿真等一系列企业互联网解决方案，知名客户有欧派、索菲亚、王老吉、PICC、海天味业、珠江钢琴、例外服饰、广百集团、轻工集团、广州发展集团。" />



<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

<meta name="apple-mobile-web-app-capable" content="yes" />


<!--<meta name="format-detection" content="telephone=no">-->

<link rel="stylesheet" href="/templates\default\style_m\style.css">

<link rel="stylesheet" href="/templates\default\style_m\media.css">

<script src="/templates\default\js\jquery-2.1.1.min.js"></script>

<script src="/templates\default\js\touch-0.2.14.min.js"></script>

<script src="/templates\default\js\TouchSlide.1.1.js"></script>

<script src="/templates\default\js\common.js"></script> 
<script src="/templates\default\js\load.js"></script> 
</head>
<body>

  <div class="menuCon" id="menuCon">

        <ul class="nav fixed">

            <li><a href="index.htm"><i></i>垄上首页</a></li>

            <li><a href="anli.htm"><i></i>经典案例</a></li>

            <li><a href="kehu.htm"><i></i>知名客户</a></li>

            <li><a href="contact.htm"><i></i>联系我们</a></li>

            <li><a href="web.htm"><i></i>网站建设</a></li>

            <li><a href="m.htm"><i></i>移动端</a></li>

            <li><a href="wei.htm"><i></i>微定制</a></li>

            <li><a href="3d.htm"><i></i>虚拟仿真</a></li>

            <li><a href="n.htm"><i></i>最新动态</a></li>


            <li><a href="service.htm"><i></i>服务流程</a></li>


        </ul>

      

    </div>
   
<header class="fixed">
	<a href="n.htm" class="goBack"></a>
	<a href="javascript:;" class="goBack" id="goBackBtn"></a>
     <h1>新闻详细</h1>
     <a href="javascript:;" class="headerMenu" id="headerMenu"></a>
     <a href="javascript:;" class="headerClose" id="closeBtn"></a>
 </header>
<section class="bgfd">
    <h2>equinox实现Class Loader机制的代码解读</h2>
    <p>日期：2015-07-25&nbsp;&nbsp;&nbsp;来源：<a href="index.htm">垄上工作室</a></p>
</section>
<article class="bgfd">
<div id="article_content" class="article_content">
<p>在团队开发过程中，不可避免的会出现这样的情况：在bundle内部声明了一个Package的同时，又从外部Import进来相同的Package，这会导致什么情况发生呢？</p>
<p>来做个小实验。</p>
<p>1、创建两个plug-in的项目。</p>
<p>A、创建第一个插件项目</p>
<p align="center"><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/teamlet/365124/o_equniox-evn-test-1.JPG"><br></p>
<p align="center"><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/teamlet/365124/o_equniox-evn-test-2.JPG"></p>
<p align="left">B、同样创建第二个插件项目</p>
<p align="center"><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/teamlet/365124/o_equniox-evn-test-4.JPG"></p>
<p align="left">2、在每个项目里面除了不同的包，还要都声明一个相同的包名。<br>在相同的包名里面创建相同名称的类，如下图所示。</p>
<p align="center"><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/teamlet/365124/o_equniox-evn-test-5.JPG"></p>
<p>&nbsp;3、编写代码</p>
<p>A、第一个SameClass.java代码</p>
<div style="BORDER-RIGHT: windowtext 0.5pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 0.5pt solid; PADDING-LEFT: 5.4pt; BACKGROUND: #e6e6e6; PADDING-BOTTOM: 4px; BORDER-LEFT: windowtext 0.5pt solid; WIDTH: 95%; WORD-BREAK: break-all; PADDING-TOP: 4px; BORDER-BOTTOM: windowtext 0.5pt solid">
<div><span style="COLOR: #0000ff">package</span><span style="COLOR: #000000">&nbsp;org.teamlet.samepackage;<br><br></span><span style="COLOR: #0000ff">public</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">class</span><span style="COLOR: #000000">&nbsp;SameClass&nbsp;{<br>&nbsp;&nbsp;&nbsp;</span><span style="COLOR: #0000ff">public</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">void</span><span style="COLOR: #000000">&nbsp;toShow(){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(</span><span style="COLOR: #000000">"</span><span style="COLOR: #000000">***&nbsp;I&nbsp;am&nbsp;inside&nbsp;!</span><span style="COLOR: #000000">"</span><span style="COLOR: #000000">);<br>&nbsp;&nbsp;&nbsp;}<br>}<br></span></div>
</div>
<p><br>B、第二个SameClass.java代码</p>
<div style="BORDER-RIGHT: windowtext 0.5pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 0.5pt solid; PADDING-LEFT: 5.4pt; BACKGROUND: #e6e6e6; PADDING-BOTTOM: 4px; BORDER-LEFT: windowtext 0.5pt solid; WIDTH: 95%; WORD-BREAK: break-all; PADDING-TOP: 4px; BORDER-BOTTOM: windowtext 0.5pt solid">
<div><span style="COLOR: #0000ff">package</span><span style="COLOR: #000000">&nbsp;org.teamlet.samepackage;<br><br></span><span style="COLOR: #0000ff">public</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">class</span><span style="COLOR: #000000">&nbsp;SameClass&nbsp;{<br>&nbsp;&nbsp;&nbsp;</span><span style="COLOR: #0000ff">public</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">void</span><span style="COLOR: #000000">&nbsp;toShow(){<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(</span><span style="COLOR: #000000">"</span><span style="COLOR: #000000">***&nbsp;I&nbsp;am&nbsp;outside!</span><span style="COLOR: #000000">"</span><span style="COLOR: #000000">);<br>&nbsp;&nbsp;&nbsp;}<br>}<br></span></div>
</div>
<p>&nbsp;</p>
<p>4、导出导入包</p>
<p>在第一个项目 equinox.evn.test.samepackage (包含"I am outside"内容)的 Manifest.MF文件中加入导出：</p>
<p>Export-Package: org.teamlet.samepackage</p>
<p>在第二个项目 org.teamlet.osgi.test&nbsp;(包含&nbsp;"I am inside"内容)的 Manifest.MF文件中加入导入：</p>
<p>Import-Package: org.osgi.framework;version="1.3.0",<br>&nbsp;org.teamlet.samepackage</p>
<p>5、增加调用</p>
<p>在第二个项目 org.teamlet.osgi.test&nbsp; 的Activator 中的 start()方法调用SameClass</p>
<div style="BORDER-RIGHT: windowtext 0.5pt solid; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 0.5pt solid; PADDING-LEFT: 5.4pt; BACKGROUND: #e6e6e6; PADDING-BOTTOM: 4px; BORDER-LEFT: windowtext 0.5pt solid; WIDTH: 95%; WORD-BREAK: break-all; PADDING-TOP: 4px; BORDER-BOTTOM: windowtext 0.5pt solid">
<div><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">public</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">void</span><span style="COLOR: #000000">&nbsp;start(BundleContext&nbsp;context)&nbsp;</span><span style="COLOR: #0000ff">throws</span><span style="COLOR: #000000">&nbsp;Exception&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SameClass&nbsp;sc&nbsp;</span><span style="COLOR: #000000">=</span><span style="COLOR: #000000">&nbsp;</span><span style="COLOR: #0000ff">new</span><span style="COLOR: #000000">&nbsp;SameClass();<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sc.toShow();<br>&nbsp;}</span></div>
</div>
<p>6、执行</p>
<p><img alt="" src="http://p.blog.csdn.net/images/p_blog_csdn_net/teamlet/365124/o_equniox-evn-test-6.JPG"></p>
<p>7、结论</p>
<p>如果bundle引入了一个和内部相同的包，那么使用的将是引入的包，而不是内部的包。</p>
<p>从《equinox实现Class Loader机制的代码解读(1)》中的class查找顺序可以看得很清楚。</p>    
        <div style="padding-top:20px">         
            <p style="font-size:12px;">版权声明：本文为博主原创文章，未经博主允许不得转载。</p>
        </div>
</div>
</article>
<div class="share bgfd fixed">
    <span>分享</span>
    <div class="bdsharebuttonbox">
        <a href="#" class="bds_tsina" data-cmd="tsina" title="分享到新浪微博"></a>
        <a href="#" class="bds_qzone" data-cmd="qzone" title="分享到QQ空间"></a>
        <a href="#" class="bds_weixin" data-cmd="weixin" title="分享到微信"></a>
        <a href="#" class="bds_more" data-cmd="more"></a>
    </div>
    <script>
        window._bd_share_config={"common":{"bdSnsKey":{},"bdText":"","bdMini":"2","bdMiniList":false,"bdPic":"","bdStyle":"2","bdSize":"16"},"share":{}};with(document)0[(getElementsByTagName('head')[0]||body).appendChild(createElement('script')).src='http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion='+~(-new Date()/36e5)];
    </script>
</div>


<script type="text/javascript">
	$('article').imagesLoaded( function() {
		var wh = $(window).height();
		var bh = $('body').height();
		if (bh<wh) {
			$('body').height(wh);
		};
	});
</script>
    


</body>
</html>